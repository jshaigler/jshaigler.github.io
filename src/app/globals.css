@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%; /* White */
    --foreground: 28 75% 43%; /* Dark Orange */
    --card: 0 0% 100%; /* White */
    --card-foreground: 28 75% 43%; /* Dark Orange */
    --popover: 0 0% 100%; /* White */
    --popover-foreground: 28 75% 43%; /* Dark Orange */
    --primary: 28 83% 50%; /* Main Orange */
    --primary-foreground: 0 0% 100%; /* White */
    --secondary: 28 40% 90%; /* Light Orange */
    --secondary-foreground: 28 75% 43%; /* Dark Orange on Secondary */
    --muted: 28 30% 95%; /* Very Light Orange */
    --muted-foreground: 28 60% 70%; /* Medium Orange */
    --accent: 28 70% 80%; /* Light Orange */
    --accent-foreground: 0 0% 100%; /* White on Accent */
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 28 20% 80%; /* Light Orange Border */
    --input: 28 10% 90%; /* Very Light Orange Input */
    --ring: 28 83% 50%; /* Main Orange for rings */
    --chart-1: 28 80% 40%; /* Dark Orange */
    --chart-2: 28 70% 50%; /* Medium Dark Orange */
    --chart-3: 28 60% 60%; /* Medium Orange */
    --chart-4: 28 50% 70%; /* Light Orange */
    --chart-5: 28 40% 80%; /* Very Light Orange */
    --sidebar-background: 0 0% 100%;
    --sidebar-foreground: 28 75% 43%;
    --sidebar-primary: 28 83% 50%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 28 70% 80%;
    --sidebar-accent-foreground: 0 0% 100%;
    --sidebar-border: 28 20% 80%;
    --sidebar-ring: 28 83% 50%;
    /* Explicit background colors for transitions */
    --background-light: 0 0% 100%;
    --background-dark: 0 0% 0%;
  }
  .dark {
    --background: 0 0% 0%; /* Black */
    --foreground: 0 0% 100%; /* White */
        --card: 0 0% 10%; /* Dark Orange Background */
        --card-foreground: 0 0% 100%; /* White */
    --popover: 28 70% 40%; /* Dark Orange Background */
    --popover-foreground: 0 0% 100%; /* White */
    --primary: 28 83% 60%; /* Brighter Orange */
    --primary-foreground: 0 0% 100%;
    --secondary: 28 60% 30%; /* Darker Orange */
    --secondary-foreground: 0 0% 100%; /* White on Secondary */
    --muted: 28 50% 35%; /* Darker Orange */
    --muted-foreground: 28 70% 70%; /* Medium Orange */
    --accent: 28 60% 50%; /* Darker Orange */
    --accent-foreground: 0 0% 100%; /* White on Accent */
    --destructive: 0 70% 50%; /* Adjusted Red */
    --destructive-foreground: 0 0% 98%;
    --border: 28 50% 30%; /* Dark Orange Border */
    --input: 28 60% 20%; /* Darkest Orange Input */
    --ring: 28 83% 60%; /* Brighter Orange for rings */
    --chart-1: 28 80% 50%; /* Dark Orange */
    --chart-2: 28 70% 40%; /* Darker Orange */
    --chart-3: 28 60% 30%; /* Darkest Orange */
    --chart-4: 28 50% 60%; /* Medium Orange */
    --chart-5: 28 40% 70%; /* Light Orange */
    --sidebar-background: 0 0% 0%;
    --sidebar-foreground: 0 0% 100%;
    --sidebar-primary: 28 83% 60%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 28 60% 50%;
    --sidebar-accent-foreground: 0 0% 100%;
    --sidebar-border: 28 50% 30%;
    --sidebar-ring: 28 83% 60%;    
    /* Explicit background colors for transitions */
    --background-light: 0 0% 100%;
    --background-dark: 28 75% 43%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    /* Apply base transitions */
    @apply bg-background text-foreground font-sans transition-colors duration-500 ease-in-out;
    font-feature-settings: "rlig" 1, "calt" 1;
    }
  h1, h2, h3, h4, h5, h6 {
    @apply font-semibold tracking-tight;
  }
  h1 { @apply text-4xl lg:text-5xl; }
  h2 { @apply text-3xl lg:text-4xl; }
  h3 { @apply text-2xl lg:text-3xl; }
  h4 { @apply text-xl lg:text-2xl; }
  p { @apply leading-7 [&:not(:first-child)]:mt-6; }
  blockquote { @apply mt-6 border-l-2 pl-6 italic; }
  ul { @apply my-6 ml-6 list-disc [&>li]:mt-2; }
  a { @apply text-primary underline-offset-4 hover:underline;}
}

/* Add smooth scroll behavior */
html {
  scroll-behavior: smooth;
}

/* Add CSS for View Transitions */
@keyframes circle-reveal {
  from { clip-path: circle(0% at var(--x) var(--y)); }
  to { clip-path: circle(var(--r) at var(--x) var(--y)); } /* Use calculated radius */
}

/* Old view state - No animation, placed behind */
::view-transition-old(root) {
  animation: none;
  mix-blend-mode: normal; /* Prevent blending issues */
  z-index: 1;
}

/* New view state - Apply the animation, placed on top */
::view-transition-new(root) {
  animation: circle-reveal 0.5s ease-in forwards;
  mix-blend-mode: normal; /* Prevent blending issues */
  z-index: 9999;
}

/* Ensure correct backgrounds during transition to prevent flicker */
/* When going TO dark */
.dark::view-transition-old(root) {
  background: hsl(var(--background-light)); /* Explicitly set old (light) background */
}
.dark::view-transition-new(root) {
  background: hsl(0 0% 0%); /* Explicitly set new (dark) background */
}

/* When going TO light */
html:not(.dark)::view-transition-old(root) {
   background: hsl(0 0% 0%); /* Explicitly set old (dark) background */
}
html:not(.dark)::view-transition-new(root) {
   background: hsl(var(--background-light)); /* Explicitly set new (light) background */
}
